// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/patch.proto

package v1

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *CreatePatchRequest) Validate() error {
	if this.Patch == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Patch", fmt.Errorf(`value '%v' must not be an empty string`, this.Patch))
	}
	if !(len(this.Description) < 1024) {
		return github_com_mwitkow_go_proto_validators.FieldError("Description", fmt.Errorf(`value '%v' must have a length smaller than '1024'`, this.Description))
	}
	return nil
}
func (this *Patch) Validate() error {
	return nil
}
func (this *GetPatchRequest) Validate() error {
	if this.Id == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must not be an empty string`, this.Id))
	}
	return nil
}
func (this *ListPatchesRequest) Validate() error {
	return nil
}
func (this *PatchList) Validate() error {
	for _, item := range this.Patches {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Patches", err)
			}
		}
	}
	return nil
}
func (this *ValidateNameRequest) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	return nil
}
func (this *Meta) Validate() error {
	for _, item := range this.Amps {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Amps", err)
			}
		}
	}
	return nil
}
func (this *AmpMeta) Validate() error {
	for _, item := range this.Channels {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Channels", err)
			}
		}
	}
	return nil
}
func (this *ChannelMeta) Validate() error {
	return nil
}
