// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.5.1
// source: proto/patch.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AmpMeta_Amp int32

const (
	AmpMeta_UNKNOWN_AMP_GROUP AmpMeta_Amp = 0
	AmpMeta_CLASSIC           AmpMeta_Amp = 1
	AmpMeta_BOUTIQUE          AmpMeta_Amp = 2
	AmpMeta_MODERN            AmpMeta_Amp = 3
)

// Enum value maps for AmpMeta_Amp.
var (
	AmpMeta_Amp_name = map[int32]string{
		0: "UNKNOWN_AMP_GROUP",
		1: "CLASSIC",
		2: "BOUTIQUE",
		3: "MODERN",
	}
	AmpMeta_Amp_value = map[string]int32{
		"UNKNOWN_AMP_GROUP": 0,
		"CLASSIC":           1,
		"BOUTIQUE":          2,
		"MODERN":            3,
	}
)

func (x AmpMeta_Amp) Enum() *AmpMeta_Amp {
	p := new(AmpMeta_Amp)
	*p = x
	return p
}

func (x AmpMeta_Amp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AmpMeta_Amp) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_patch_proto_enumTypes[0].Descriptor()
}

func (AmpMeta_Amp) Type() protoreflect.EnumType {
	return &file_proto_patch_proto_enumTypes[0]
}

func (x AmpMeta_Amp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AmpMeta_Amp.Descriptor instead.
func (AmpMeta_Amp) EnumDescriptor() ([]byte, []int) {
	return file_proto_patch_proto_rawDescGZIP(), []int{7, 0}
}

type ChannelMeta_Channel int32

const (
	ChannelMeta_UNKNOWN_CHANNEL ChannelMeta_Channel = 0
	ChannelMeta_CLEAN           ChannelMeta_Channel = 1
	ChannelMeta_CRUNCH          ChannelMeta_Channel = 2
	ChannelMeta_LEAD            ChannelMeta_Channel = 3
	ChannelMeta_HI_GAIN         ChannelMeta_Channel = 4
	ChannelMeta_SPECIAL         ChannelMeta_Channel = 5
	ChannelMeta_BASS            ChannelMeta_Channel = 6
	ChannelMeta_ACOUSTIC        ChannelMeta_Channel = 7
	ChannelMeta_FLAT            ChannelMeta_Channel = 8
)

// Enum value maps for ChannelMeta_Channel.
var (
	ChannelMeta_Channel_name = map[int32]string{
		0: "UNKNOWN_CHANNEL",
		1: "CLEAN",
		2: "CRUNCH",
		3: "LEAD",
		4: "HI_GAIN",
		5: "SPECIAL",
		6: "BASS",
		7: "ACOUSTIC",
		8: "FLAT",
	}
	ChannelMeta_Channel_value = map[string]int32{
		"UNKNOWN_CHANNEL": 0,
		"CLEAN":           1,
		"CRUNCH":          2,
		"LEAD":            3,
		"HI_GAIN":         4,
		"SPECIAL":         5,
		"BASS":            6,
		"ACOUSTIC":        7,
		"FLAT":            8,
	}
)

func (x ChannelMeta_Channel) Enum() *ChannelMeta_Channel {
	p := new(ChannelMeta_Channel)
	*p = x
	return p
}

func (x ChannelMeta_Channel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelMeta_Channel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_patch_proto_enumTypes[1].Descriptor()
}

func (ChannelMeta_Channel) Type() protoreflect.EnumType {
	return &file_proto_patch_proto_enumTypes[1]
}

func (x ChannelMeta_Channel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelMeta_Channel.Descriptor instead.
func (ChannelMeta_Channel) EnumDescriptor() ([]byte, []int) {
	return file_proto_patch_proto_rawDescGZIP(), []int{8, 0}
}

type CreatePatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Patch       string `protobuf:"bytes,1,opt,name=patch,proto3" json:"patch,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreatePatchRequest) Reset() {
	*x = CreatePatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_patch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePatchRequest) ProtoMessage() {}

func (x *CreatePatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_patch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePatchRequest.ProtoReflect.Descriptor instead.
func (*CreatePatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_patch_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePatchRequest) GetPatch() string {
	if x != nil {
		return x.Patch
	}
	return ""
}

func (x *CreatePatchRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Patch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Patch       string `protobuf:"bytes,2,opt,name=patch,proto3" json:"patch,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Permalink   string `protobuf:"bytes,5,opt,name=permalink,proto3" json:"permalink,omitempty"`
}

func (x *Patch) Reset() {
	*x = Patch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_patch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Patch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patch) ProtoMessage() {}

func (x *Patch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_patch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patch.ProtoReflect.Descriptor instead.
func (*Patch) Descriptor() ([]byte, []int) {
	return file_proto_patch_proto_rawDescGZIP(), []int{1}
}

func (x *Patch) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Patch) GetPatch() string {
	if x != nil {
		return x.Patch
	}
	return ""
}

func (x *Patch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Patch) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Patch) GetPermalink() string {
	if x != nil {
		return x.Permalink
	}
	return ""
}

type GetPatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPatchRequest) Reset() {
	*x = GetPatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_patch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatchRequest) ProtoMessage() {}

func (x *GetPatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_patch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatchRequest.ProtoReflect.Descriptor instead.
func (*GetPatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_patch_proto_rawDescGZIP(), []int{2}
}

func (x *GetPatchRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListPatchesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter   string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	PageSize int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Page     int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListPatchesRequest) Reset() {
	*x = ListPatchesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_patch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPatchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatchesRequest) ProtoMessage() {}

func (x *ListPatchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_patch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatchesRequest.ProtoReflect.Descriptor instead.
func (*ListPatchesRequest) Descriptor() ([]byte, []int) {
	return file_proto_patch_proto_rawDescGZIP(), []int{3}
}

func (x *ListPatchesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListPatchesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPatchesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type PatchList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Patches []*Patch `protobuf:"bytes,1,rep,name=patches,proto3" json:"patches,omitempty"`
}

func (x *PatchList) Reset() {
	*x = PatchList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_patch_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchList) ProtoMessage() {}

func (x *PatchList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_patch_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchList.ProtoReflect.Descriptor instead.
func (*PatchList) Descriptor() ([]byte, []int) {
	return file_proto_patch_proto_rawDescGZIP(), []int{4}
}

func (x *PatchList) GetPatches() []*Patch {
	if x != nil {
		return x.Patches
	}
	return nil
}

type ValidateNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ValidateNameRequest) Reset() {
	*x = ValidateNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_patch_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateNameRequest) ProtoMessage() {}

func (x *ValidateNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_patch_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateNameRequest.ProtoReflect.Descriptor instead.
func (*ValidateNameRequest) Descriptor() ([]byte, []int) {
	return file_proto_patch_proto_rawDescGZIP(), []int{5}
}

func (x *ValidateNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amps []*AmpMeta `protobuf:"bytes,1,rep,name=amps,proto3" json:"amps,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_patch_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_patch_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_proto_patch_proto_rawDescGZIP(), []int{6}
}

func (x *Meta) GetAmps() []*AmpMeta {
	if x != nil {
		return x.Amps
	}
	return nil
}

type AmpMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amp      AmpMeta_Amp    `protobuf:"varint,1,opt,name=amp,proto3,enum=thrl6p.AmpMeta_Amp" json:"amp,omitempty"`
	Channels []*ChannelMeta `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *AmpMeta) Reset() {
	*x = AmpMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_patch_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmpMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmpMeta) ProtoMessage() {}

func (x *AmpMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_patch_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmpMeta.ProtoReflect.Descriptor instead.
func (*AmpMeta) Descriptor() ([]byte, []int) {
	return file_proto_patch_proto_rawDescGZIP(), []int{7}
}

func (x *AmpMeta) GetAmp() AmpMeta_Amp {
	if x != nil {
		return x.Amp
	}
	return AmpMeta_UNKNOWN_AMP_GROUP
}

func (x *AmpMeta) GetChannels() []*ChannelMeta {
	if x != nil {
		return x.Channels
	}
	return nil
}

type ChannelMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel     ChannelMeta_Channel `protobuf:"varint,1,opt,name=channel,proto3,enum=thrl6p.ChannelMeta_Channel" json:"channel,omitempty"`
	Name        string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	InspiredBy  string              `protobuf:"bytes,3,opt,name=inspired_by,json=inspiredBy,proto3" json:"inspired_by,omitempty"`
	Description string              `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ChannelMeta) Reset() {
	*x = ChannelMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_patch_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMeta) ProtoMessage() {}

func (x *ChannelMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_patch_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMeta.ProtoReflect.Descriptor instead.
func (*ChannelMeta) Descriptor() ([]byte, []int) {
	return file_proto_patch_proto_rawDescGZIP(), []int{8}
}

func (x *ChannelMeta) GetChannel() ChannelMeta_Channel {
	if x != nil {
		return x.Channel
	}
	return ChannelMeta_UNKNOWN_CHANNEL
}

func (x *ChannelMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelMeta) GetInspiredBy() string {
	if x != nil {
		return x.InspiredBy
	}
	return ""
}

func (x *ChannelMeta) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_proto_patch_proto protoreflect.FileDescriptor

var file_proto_patch_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x68, 0x72, 0x6c, 0x36, 0x70, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x58, 0x01, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x29, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xe2, 0xdf, 0x1f, 0x03, 0x78, 0x80, 0x08, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65,
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x29, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x34, 0x0a, 0x09, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x07, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x74, 0x68, 0x72, 0x6c, 0x36, 0x70, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x31, 0x0a, 0x13, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x04, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x68, 0x72, 0x6c, 0x36, 0x70, 0x2e, 0x41, 0x6d, 0x70, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x61, 0x6d, 0x70, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x07, 0x41, 0x6d, 0x70, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x03, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x74, 0x68, 0x72, 0x6c, 0x36, 0x70, 0x2e, 0x41, 0x6d, 0x70, 0x4d, 0x65, 0x74,
	0x61, 0x2e, 0x41, 0x6d, 0x70, 0x52, 0x03, 0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74,
	0x68, 0x72, 0x6c, 0x36, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x43, 0x0a, 0x03, 0x41,
	0x6d, 0x70, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x41, 0x4d,
	0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4c, 0x41,
	0x53, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x4f, 0x55, 0x54, 0x49, 0x51,
	0x55, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x4e, 0x10, 0x03,
	0x22, 0x98, 0x02, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x35, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x74, 0x68, 0x72, 0x6c, 0x36, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7b,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x55,
	0x4e, 0x43, 0x48, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x41, 0x44, 0x10, 0x03, 0x12,
	0x0b, 0x0a, 0x07, 0x48, 0x49, 0x5f, 0x47, 0x41, 0x49, 0x4e, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x41, 0x53,
	0x53, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x4f, 0x55, 0x53, 0x54, 0x49, 0x43, 0x10,
	0x07, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x4c, 0x41, 0x54, 0x10, 0x08, 0x32, 0xcf, 0x04, 0x0a, 0x0c,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x74, 0x68,
	0x72, 0x6c, 0x36, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x74, 0x68, 0x72, 0x6c, 0x36, 0x70,
	0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x16,
	0x1a, 0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x20, 0x61, 0x20, 0x6e, 0x65, 0x77, 0x20,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x12, 0x76, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x17, 0x2e, 0x74, 0x68, 0x72, 0x6c, 0x36, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x74, 0x68,
	0x72, 0x6c, 0x36, 0x70, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x92, 0x41, 0x28, 0x1a, 0x26, 0x47, 0x65, 0x74, 0x73, 0x20, 0x61, 0x20, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x65, 0x64, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x12, 0x61,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x74, 0x68,
	0x72, 0x6c, 0x36, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x74, 0x68, 0x72, 0x6c, 0x36, 0x70,
	0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x92, 0x41,
	0x10, 0x1a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x20, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x2e, 0x12, 0x83, 0x01, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x74, 0x68, 0x72, 0x6c, 0x36, 0x70, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22,
	0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x18, 0x1a,
	0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x2e, 0x12, 0x74, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x74, 0x68,
	0x72, 0x6c, 0x36, 0x70, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x92, 0x41, 0x24, 0x1a, 0x22, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x42, 0x08, 0x5a,
	0x06, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_patch_proto_rawDescOnce sync.Once
	file_proto_patch_proto_rawDescData = file_proto_patch_proto_rawDesc
)

func file_proto_patch_proto_rawDescGZIP() []byte {
	file_proto_patch_proto_rawDescOnce.Do(func() {
		file_proto_patch_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_patch_proto_rawDescData)
	})
	return file_proto_patch_proto_rawDescData
}

var file_proto_patch_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_patch_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_patch_proto_goTypes = []interface{}{
	(AmpMeta_Amp)(0),            // 0: thrl6p.AmpMeta.Amp
	(ChannelMeta_Channel)(0),    // 1: thrl6p.ChannelMeta.Channel
	(*CreatePatchRequest)(nil),  // 2: thrl6p.CreatePatchRequest
	(*Patch)(nil),               // 3: thrl6p.Patch
	(*GetPatchRequest)(nil),     // 4: thrl6p.GetPatchRequest
	(*ListPatchesRequest)(nil),  // 5: thrl6p.ListPatchesRequest
	(*PatchList)(nil),           // 6: thrl6p.PatchList
	(*ValidateNameRequest)(nil), // 7: thrl6p.ValidateNameRequest
	(*Meta)(nil),                // 8: thrl6p.Meta
	(*AmpMeta)(nil),             // 9: thrl6p.AmpMeta
	(*ChannelMeta)(nil),         // 10: thrl6p.ChannelMeta
	(*empty.Empty)(nil),         // 11: google.protobuf.Empty
}
var file_proto_patch_proto_depIdxs = []int32{
	3,  // 0: thrl6p.PatchList.patches:type_name -> thrl6p.Patch
	9,  // 1: thrl6p.Meta.amps:type_name -> thrl6p.AmpMeta
	0,  // 2: thrl6p.AmpMeta.amp:type_name -> thrl6p.AmpMeta.Amp
	10, // 3: thrl6p.AmpMeta.channels:type_name -> thrl6p.ChannelMeta
	1,  // 4: thrl6p.ChannelMeta.channel:type_name -> thrl6p.ChannelMeta.Channel
	2,  // 5: thrl6p.PatchService.CreatePatch:input_type -> thrl6p.CreatePatchRequest
	4,  // 6: thrl6p.PatchService.GetPatch:input_type -> thrl6p.GetPatchRequest
	5,  // 7: thrl6p.PatchService.ListPatch:input_type -> thrl6p.ListPatchesRequest
	7,  // 8: thrl6p.PatchService.ValidateName:input_type -> thrl6p.ValidateNameRequest
	11, // 9: thrl6p.PatchService.Metadata:input_type -> google.protobuf.Empty
	3,  // 10: thrl6p.PatchService.CreatePatch:output_type -> thrl6p.Patch
	3,  // 11: thrl6p.PatchService.GetPatch:output_type -> thrl6p.Patch
	6,  // 12: thrl6p.PatchService.ListPatch:output_type -> thrl6p.PatchList
	11, // 13: thrl6p.PatchService.ValidateName:output_type -> google.protobuf.Empty
	8,  // 14: thrl6p.PatchService.Metadata:output_type -> thrl6p.Meta
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_patch_proto_init() }
func file_proto_patch_proto_init() {
	if File_proto_patch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_patch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_patch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Patch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_patch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_patch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPatchesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_patch_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_patch_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_patch_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_patch_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmpMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_patch_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_patch_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_patch_proto_goTypes,
		DependencyIndexes: file_proto_patch_proto_depIdxs,
		EnumInfos:         file_proto_patch_proto_enumTypes,
		MessageInfos:      file_proto_patch_proto_msgTypes,
	}.Build()
	File_proto_patch_proto = out.File
	file_proto_patch_proto_rawDesc = nil
	file_proto_patch_proto_goTypes = nil
	file_proto_patch_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PatchServiceClient is the client API for PatchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PatchServiceClient interface {
	CreatePatch(ctx context.Context, in *CreatePatchRequest, opts ...grpc.CallOption) (*Patch, error)
	GetPatch(ctx context.Context, in *GetPatchRequest, opts ...grpc.CallOption) (*Patch, error)
	ListPatch(ctx context.Context, in *ListPatchesRequest, opts ...grpc.CallOption) (*PatchList, error)
	ValidateName(ctx context.Context, in *ValidateNameRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Metadata(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Meta, error)
}

type patchServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPatchServiceClient(cc grpc.ClientConnInterface) PatchServiceClient {
	return &patchServiceClient{cc}
}

func (c *patchServiceClient) CreatePatch(ctx context.Context, in *CreatePatchRequest, opts ...grpc.CallOption) (*Patch, error) {
	out := new(Patch)
	err := c.cc.Invoke(ctx, "/thrl6p.PatchService/CreatePatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *patchServiceClient) GetPatch(ctx context.Context, in *GetPatchRequest, opts ...grpc.CallOption) (*Patch, error) {
	out := new(Patch)
	err := c.cc.Invoke(ctx, "/thrl6p.PatchService/GetPatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *patchServiceClient) ListPatch(ctx context.Context, in *ListPatchesRequest, opts ...grpc.CallOption) (*PatchList, error) {
	out := new(PatchList)
	err := c.cc.Invoke(ctx, "/thrl6p.PatchService/ListPatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *patchServiceClient) ValidateName(ctx context.Context, in *ValidateNameRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/thrl6p.PatchService/ValidateName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *patchServiceClient) Metadata(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Meta, error) {
	out := new(Meta)
	err := c.cc.Invoke(ctx, "/thrl6p.PatchService/Metadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PatchServiceServer is the server API for PatchService service.
type PatchServiceServer interface {
	CreatePatch(context.Context, *CreatePatchRequest) (*Patch, error)
	GetPatch(context.Context, *GetPatchRequest) (*Patch, error)
	ListPatch(context.Context, *ListPatchesRequest) (*PatchList, error)
	ValidateName(context.Context, *ValidateNameRequest) (*empty.Empty, error)
	Metadata(context.Context, *empty.Empty) (*Meta, error)
}

// UnimplementedPatchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPatchServiceServer struct {
}

func (*UnimplementedPatchServiceServer) CreatePatch(context.Context, *CreatePatchRequest) (*Patch, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePatch not implemented")
}
func (*UnimplementedPatchServiceServer) GetPatch(context.Context, *GetPatchRequest) (*Patch, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPatch not implemented")
}
func (*UnimplementedPatchServiceServer) ListPatch(context.Context, *ListPatchesRequest) (*PatchList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPatch not implemented")
}
func (*UnimplementedPatchServiceServer) ValidateName(context.Context, *ValidateNameRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateName not implemented")
}
func (*UnimplementedPatchServiceServer) Metadata(context.Context, *empty.Empty) (*Meta, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Metadata not implemented")
}

func RegisterPatchServiceServer(s *grpc.Server, srv PatchServiceServer) {
	s.RegisterService(&_PatchService_serviceDesc, srv)
}

func _PatchService_CreatePatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PatchServiceServer).CreatePatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thrl6p.PatchService/CreatePatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PatchServiceServer).CreatePatch(ctx, req.(*CreatePatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PatchService_GetPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PatchServiceServer).GetPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thrl6p.PatchService/GetPatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PatchServiceServer).GetPatch(ctx, req.(*GetPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PatchService_ListPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPatchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PatchServiceServer).ListPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thrl6p.PatchService/ListPatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PatchServiceServer).ListPatch(ctx, req.(*ListPatchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PatchService_ValidateName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PatchServiceServer).ValidateName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thrl6p.PatchService/ValidateName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PatchServiceServer).ValidateName(ctx, req.(*ValidateNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PatchService_Metadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PatchServiceServer).Metadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thrl6p.PatchService/Metadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PatchServiceServer).Metadata(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _PatchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "thrl6p.PatchService",
	HandlerType: (*PatchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePatch",
			Handler:    _PatchService_CreatePatch_Handler,
		},
		{
			MethodName: "GetPatch",
			Handler:    _PatchService_GetPatch_Handler,
		},
		{
			MethodName: "ListPatch",
			Handler:    _PatchService_ListPatch_Handler,
		},
		{
			MethodName: "ValidateName",
			Handler:    _PatchService_ValidateName_Handler,
		},
		{
			MethodName: "Metadata",
			Handler:    _PatchService_Metadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/patch.proto",
}
